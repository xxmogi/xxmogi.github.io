<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Wasted Laboratory]]></title>
  <link href="http://xxmogi.github.io/atom.xml" rel="self"/>
  <link href="http://xxmogi.github.io/"/>
  <updated>2014-11-19T02:11:33+09:00</updated>
  <id>http://xxmogi.github.io/</id>
  <author>
    <name><![CDATA[Takashi Mogi]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Octopress]]></title>
    <link href="http://xxmogi.github.io/blog/2014/11/19/first/"/>
    <updated>2014-11-19T01:52:27+09:00</updated>
    <id>http://xxmogi.github.io/blog/2014/11/19/first</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[github pages作成]]></title>
    <link href="http://xxmogi.github.io/blog/2014/10/09/create/"/>
    <updated>2014-10-09T00:00:00+09:00</updated>
    <id>http://xxmogi.github.io/blog/2014/10/09/create</id>
    <content type="html"><![CDATA[<h1>github pages</h1>

<p><a href="https://pages.github.com/">github pages</a>です。いろいろメモ用のサイトほしいなと思ったけど、
結局自分で作っちゃうんですよね。</p>

<p>github pagesで<a href="http://jekyllrb.com/">Jekyll</a>使えるらしい、とのことでJekyllで作ってますが、単純にStaticな
サイトだとちょっとつまらないなぁと。</p>

<p>その結果、最近流行りの<a href="https://angularjs.org/">AngularJS</a>使って
SPA(Single Page Application)チックな作りにしました。</p>

<h1>SPAにするために</h1>

<p>Jekyllではstaticなページが出来上がるので、angularからAjaxで
HTMLを読み込み、DOMに埋め込みます。</p>

<p>ただ、angularから単純に埋め込んでしまうと勝手にエスケープされてしまうので、
エスケープされないように<code>ng-bind-html</code>を使ってあげます。
Jekyllのポストを表示するAngularテンプレートを以下のようにします。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;div</span> <span class="na">ng-bind-html=</span><span class="s">&quot;contentHtml&quot;</span><span class="nt">&gt;</span>
</span><span class='line'><span class="nt">&lt;/div&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>コントローラー側では、ここで指定した<code>contentHtml</code>にajaxで読んできた
htmlを入れてあげます</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">app</span><span class="p">.</span><span class="nx">contoller</span><span class="p">(</span><span class="s2">&quot;PostController&quot;</span><span class="p">,[</span><span class="s1">&#39;$scope&#39;</span><span class="p">,</span><span class="s1">&#39;$http&#39;</span><span class="p">,</span>
</span><span class='line'>  <span class="kd">function</span> <span class="nx">PostController</span><span class="p">(</span><span class="nx">$scope</span><span class="p">,</span> <span class="nx">$http</span><span class="p">){</span>
</span><span class='line'>  <span class="nx">$http</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s1">&#39;/path/to/post&#39;</span><span class="p">)</span>
</span><span class='line'>    <span class="p">.</span><span class="nx">success</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">data</span><span class="p">,</span> <span class="nx">status</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">$scope</span><span class="p">.</span><span class="nx">contentHtml</span> <span class="o">=</span> <span class="nx">data</span><span class="p">;</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'>  <span class="p">}]);</span>
</span></code></pre></td></tr></table></div></figure>


<p>これでJekyllで読み込んできたHTMLをページに表示できます。あとは<code>/path/to/post</code>の部分を
<code>$routeParams</code>とかを使って指定して上げるだけでOK。ホントはPathをきちんと
Validateしてあげないと
<a href="https://www.acunetix.com/websitesecurity/directory-traversal/">Directory Traversal</a>とか可能になるのですが
今回はこれまでに…</p>
]]></content>
  </entry>
  
</feed>
